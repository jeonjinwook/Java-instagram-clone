spring:
  application:
    name: Java-instagram-clone

  web:
    resources:
      static-locations: classpath:/static/

  # JPA 설정
  jpa:
    hibernate:
      ddl-auto: validate
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        boot:
          allow_jdbc_metadata_access: false

  # PostgreSQL 데이터베이스 설정
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/instaDB
    username: sa
    password: instagram55!

  # GraphiQL 설정
  graphql:
    graphiql:
      enabled: true

  # Kafka 설정
  kafka:
    bootstrap-servers: 127.0.0.1:10000
    producer:
      bootstrap-servers: 127.0.0.1:10000
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      acks: all
    consumer:
      bootstrap-servers: 127.0.0.1:10000
      enable-auto-commit: false
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      ack-mode: manual
  
  # Multipart 설정
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB

  # Redis 설정
  data:
    redis:
      host: localhost
      port: 7012

# P6Spy 설정
p6spy:
  config:
    logMessageFormat: com.p6spy.engine.spy.appender.Slf4JLogger

decorator:
  datasource:
    p6spy:
      multiline: true
      enable-logging: true

# JWT 설정
jwt:
  secret: sEfnEaka977Tg8?sy5PjdSXhRHB8f6Ts3g3CM5Cc

