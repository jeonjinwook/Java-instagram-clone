networks:
  shared_network:
    name: my_network
    driver: bridge

services:

#  # Elastic search 설정
#  elasticsearch:
#    container_name: elasticsearch
#    image: elasticsearch:7.17.16
#    ports:
#      - 9200:9200
#      - 9300:9300
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data
#    # Elastic search 계정정보
#    environment:
#      discovery.type: single-node
#      xpack.security.enabled: true
#      xpack.security.transport.ssl.enabled: true
#      ELASTIC_USERNAME: "elastic"
#      ELASTIC_PASSWORD: "elastic123!@#"
#    networks:
#      - shared_network
#
#
#  # Logstash 설정
#  logstash:
#    container_name: logstash
#    image: docker.elastic.co/logstash/logstash:7.17.16
#    ports:
#      - 5000:5000
#      - 9600:9600
#    volumes:
#      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
#    depends_on:
#      - elasticsearch
#    networks:
#      - shared_network
#
#
#  # Kibana 설정
#  kibana:
#    container_name: kibana
#    image: kibana:7.17.16
#    ports:
#      - 5601:5601
#    depends_on:
#      - elasticsearch
#    volumes:
#      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
#    networks:
#      - shared_network


  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - shared_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 10000:9094
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://127.0.0.1:10000
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
    networks:
      - shared_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8082:8080
    environment:
      - DYNAMIC_CONFIG_ENABLED=true
      - KAFKA_CLUSTERS_0_NAME=peters_kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    networks:
      - shared_network